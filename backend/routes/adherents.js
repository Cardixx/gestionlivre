const express = require('express');
const router = express.Router();
const db = require('../config/db');

// üìã Lister tous les adh√©rents
router.get('/', async(req, res) => {
    try {
        const [results] = await db.query('SELECT * FROM adherent');
        res.json(results);
    } catch (err) {
        console.error('Erreur SQL:', err);
        res.status(500).json({ error: 'Erreur serveur' });
    }
});

// ‚ûï Ajouter un adh√©rent
router.post('/', async(req, res) => {
    const { nom, prenom, fonction, telephone } = req.body;
    const sql = 'INSERT INTO adherent (nom, prenom, fonction, telephone) VALUES (?, ?, ?, ?)';

    try {
        const [result] = await db.query(sql, [nom, prenom, fonction, telephone]);
        res.status(201).json({
            message: 'Adh√©rent ajout√©',
            id: result.insertId
        });
    } catch (err) {
        console.error('Erreur ajout adh√©rent:', err);
        res.status(500).json({ error: 'Erreur ajout adh√©rent' });
    }
});

// ‚úèÔ∏è Modifier un adh√©rent
router.put('/:id', async(req, res) => {
    const { nom, prenom, fonction, telephone } = req.body;
    const sql = 'UPDATE adherent SET nom=?, prenom=?, fonction=?, telephone=? WHERE id_adherent=?';

    try {
        const [result] = await db.query(sql, [nom, prenom, fonction, telephone, req.params.id]);

        if (result.affectedRows === 0) {
            return res.status(404).json({ error: 'Adh√©rent non trouv√©' });
        }

        res.json({ message: 'Adh√©rent modifi√©' });
    } catch (err) {
        console.error('Erreur modification adh√©rent:', err);
        res.status(500).json({ error: 'Erreur modification adh√©rent' });
    }
});

// üóëÔ∏è Supprimer un adh√©rent
router.delete('/:id', async(req, res) => {
    try {
        const [result] = await db.query('DELETE FROM adherent WHERE id_adherent=?', [req.params.id]);

        if (result.affectedRows === 0) {
            return res.status(404).json({ error: 'Adh√©rent non trouv√©' });
        }

        res.json({ message: 'Adh√©rent supprim√©' });
    } catch (err) {
        console.error('Erreur suppression adh√©rent:', err);

        // Gestion sp√©cifique des erreurs de contrainte de cl√© √©trang√®re
        if (err.code === 'ER_ROW_IS_REFERENCED_2') {
            return res.status(409).json({
                error: 'Impossible de supprimer cet adh√©rent car il est r√©f√©renc√© ailleurs'
            });
        }

        res.status(500).json({ error: 'Erreur suppression adh√©rent' });
    }
});

module.exports = router;